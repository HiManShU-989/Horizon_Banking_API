"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("main-app",{

/***/ "(app-pages-browser)/./sentry.client.config.ts":
/*!*********************************!*\
  !*** ./sentry.client.config.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/nextjs */ \"(app-pages-browser)/./node_modules/@sentry/nextjs/build/esm/client/index.js\");\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/nextjs */ \"(app-pages-browser)/./node_modules/@sentry-internal/replay/build/npm/esm/index.js\");\n// This file configures the initialization of Sentry on the client.\n// The config you add here will be used whenever a users loads a page in their browser.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\nglobalThis[\"_sentryRewritesTunnelPath\"] = undefined;\nglobalThis[\"SENTRY_RELEASE\"] = undefined;\nglobalThis[\"_sentryBasePath\"] = undefined;\nglobalThis[\"_sentryRewriteFramesAssetPrefixPath\"] = \"\";\nglobalThis[\"_sentryAssetPrefix\"] = undefined;\nglobalThis[\"_sentryExperimentalThirdPartyOriginStackFrames\"] = undefined;\nglobalThis[\"_sentryRewritesTunnelPath\"] = undefined;\nglobalThis[\"SENTRY_RELEASE\"] = undefined;\nglobalThis[\"_sentryBasePath\"] = undefined;\nglobalThis[\"_sentryRewriteFramesAssetPrefixPath\"] = \"\";\nglobalThis[\"_sentryAssetPrefix\"] = undefined;\nglobalThis[\"_sentryExperimentalThirdPartyOriginStackFrames\"] = undefined;\nglobalThis[\"_sentryRewritesTunnelPath\"] = undefined;\nglobalThis[\"SENTRY_RELEASE\"] = undefined;\nglobalThis[\"_sentryBasePath\"] = undefined;\nglobalThis[\"_sentryRewriteFramesAssetPrefixPath\"] = \"\";\nglobalThis[\"_sentryAssetPrefix\"] = undefined;\nglobalThis[\"_sentryExperimentalThirdPartyOriginStackFrames\"] = undefined;\n\n_sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__.init({\n    dsn: \"https://e300b41df2ffb6d4592972400a25c0d3@o4506876178464768.ingest.us.sentry.io/4507159179034624\",\n    // Adjust this value in production, or use tracesSampler for greater control\n    tracesSampleRate: 1,\n    // Setting this option to true will print useful information to the console while you're setting up Sentry.\n    debug: false,\n    replaysOnErrorSampleRate: 1.0,\n    // This sets the sample rate to be 10%. You may want this to be 100% while\n    // in development and sample at a lower rate in production\n    replaysSessionSampleRate: 1.0,\n    // You can remove this option if you're not planning to use the Sentry Session Replay feature:\n    integrations: [\n        _sentry_nextjs__WEBPACK_IMPORTED_MODULE_1__.replayIntegration({\n            // Additional Replay configuration goes in here, for example:\n            maskAllText: true,\n            blockAllMedia: true\n        })\n    ]\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlbnRyeS5jbGllbnQuY29uZmlnLnRzIiwibWFwcGluZ3MiOiI7OztBQUFBLG1FQUFtRTtBQUNuRSx1RkFBdUY7QUFDdkYsNkRBQTZEO0FBRTVEQSxVQUFVLENBQUMsNEJBQTRCLEdBQUdDO0FBQVVELFVBQVUsQ0FBQyxpQkFBaUIsR0FBR0M7QUFBVUQsVUFBVSxDQUFDLGtCQUFrQixHQUFHQztBQUFVRCxVQUFVLENBQUMsc0NBQXNDLEdBQUc7QUFBR0EsVUFBVSxDQUFDLHFCQUFxQixHQUFHQztBQUFVRCxVQUFVLENBQUMsaURBQWlELEdBQUdDO0FBQVdELFVBQVUsQ0FBQyw0QkFBNEIsR0FBR0M7QUFBVUQsVUFBVSxDQUFDLGlCQUFpQixHQUFHQztBQUFVRCxVQUFVLENBQUMsa0JBQWtCLEdBQUdDO0FBQVVELFVBQVUsQ0FBQyxzQ0FBc0MsR0FBRztBQUFHQSxVQUFVLENBQUMscUJBQXFCLEdBQUdDO0FBQVVELFVBQVUsQ0FBQyxpREFBaUQsR0FBR0M7QUFBV0QsVUFBVSxDQUFDLDRCQUE0QixHQUFHQztBQUFVRCxVQUFVLENBQUMsaUJBQWlCLEdBQUdDO0FBQVVELFVBQVUsQ0FBQyxrQkFBa0IsR0FBR0M7QUFBVUQsVUFBVSxDQUFDLHNDQUFzQyxHQUFHO0FBQUdBLFVBQVUsQ0FBQyxxQkFBcUIsR0FBR0M7QUFBVUQsVUFBVSxDQUFDLGlEQUFpRCxHQUFHQztBQUFtRDtBQUV4OEJDLGdEQUFXLENBQUM7SUFDVkUsS0FBSztJQUVMLDRFQUE0RTtJQUM1RUMsa0JBQWtCO0lBRWxCLDJHQUEyRztJQUMzR0MsT0FBTztJQUVQQywwQkFBMEI7SUFFMUIsMEVBQTBFO0lBQzFFLDBEQUEwRDtJQUMxREMsMEJBQTBCO0lBRTFCLDhGQUE4RjtJQUM5RkMsY0FBYztRQUNaUCw2REFBd0IsQ0FBQztZQUN2Qiw2REFBNkQ7WUFDN0RTLGFBQWE7WUFDYkMsZUFBZTtRQUNqQjtLQUNEO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2VudHJ5LmNsaWVudC5jb25maWcudHM/ODhhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgY29uZmlndXJlcyB0aGUgaW5pdGlhbGl6YXRpb24gb2YgU2VudHJ5IG9uIHRoZSBjbGllbnQuXHJcbi8vIFRoZSBjb25maWcgeW91IGFkZCBoZXJlIHdpbGwgYmUgdXNlZCB3aGVuZXZlciBhIHVzZXJzIGxvYWRzIGEgcGFnZSBpbiB0aGVpciBicm93c2VyLlxyXG4vLyBodHRwczovL2RvY3Muc2VudHJ5LmlvL3BsYXRmb3Jtcy9qYXZhc2NyaXB0L2d1aWRlcy9uZXh0anMvXHJcblxyXG47Z2xvYmFsVGhpc1tcIl9zZW50cnlSZXdyaXRlc1R1bm5lbFBhdGhcIl0gPSB1bmRlZmluZWQ7Z2xvYmFsVGhpc1tcIlNFTlRSWV9SRUxFQVNFXCJdID0gdW5kZWZpbmVkO2dsb2JhbFRoaXNbXCJfc2VudHJ5QmFzZVBhdGhcIl0gPSB1bmRlZmluZWQ7Z2xvYmFsVGhpc1tcIl9zZW50cnlSZXdyaXRlRnJhbWVzQXNzZXRQcmVmaXhQYXRoXCJdID0gXCJcIjtnbG9iYWxUaGlzW1wiX3NlbnRyeUFzc2V0UHJlZml4XCJdID0gdW5kZWZpbmVkO2dsb2JhbFRoaXNbXCJfc2VudHJ5RXhwZXJpbWVudGFsVGhpcmRQYXJ0eU9yaWdpblN0YWNrRnJhbWVzXCJdID0gdW5kZWZpbmVkOztnbG9iYWxUaGlzW1wiX3NlbnRyeVJld3JpdGVzVHVubmVsUGF0aFwiXSA9IHVuZGVmaW5lZDtnbG9iYWxUaGlzW1wiU0VOVFJZX1JFTEVBU0VcIl0gPSB1bmRlZmluZWQ7Z2xvYmFsVGhpc1tcIl9zZW50cnlCYXNlUGF0aFwiXSA9IHVuZGVmaW5lZDtnbG9iYWxUaGlzW1wiX3NlbnRyeVJld3JpdGVGcmFtZXNBc3NldFByZWZpeFBhdGhcIl0gPSBcIlwiO2dsb2JhbFRoaXNbXCJfc2VudHJ5QXNzZXRQcmVmaXhcIl0gPSB1bmRlZmluZWQ7Z2xvYmFsVGhpc1tcIl9zZW50cnlFeHBlcmltZW50YWxUaGlyZFBhcnR5T3JpZ2luU3RhY2tGcmFtZXNcIl0gPSB1bmRlZmluZWQ7O2dsb2JhbFRoaXNbXCJfc2VudHJ5UmV3cml0ZXNUdW5uZWxQYXRoXCJdID0gdW5kZWZpbmVkO2dsb2JhbFRoaXNbXCJTRU5UUllfUkVMRUFTRVwiXSA9IHVuZGVmaW5lZDtnbG9iYWxUaGlzW1wiX3NlbnRyeUJhc2VQYXRoXCJdID0gdW5kZWZpbmVkO2dsb2JhbFRoaXNbXCJfc2VudHJ5UmV3cml0ZUZyYW1lc0Fzc2V0UHJlZml4UGF0aFwiXSA9IFwiXCI7Z2xvYmFsVGhpc1tcIl9zZW50cnlBc3NldFByZWZpeFwiXSA9IHVuZGVmaW5lZDtnbG9iYWxUaGlzW1wiX3NlbnRyeUV4cGVyaW1lbnRhbFRoaXJkUGFydHlPcmlnaW5TdGFja0ZyYW1lc1wiXSA9IHVuZGVmaW5lZDtpbXBvcnQgKiBhcyBTZW50cnkgZnJvbSBcIkBzZW50cnkvbmV4dGpzXCI7XHJcblxyXG5TZW50cnkuaW5pdCh7XHJcbiAgZHNuOiBcImh0dHBzOi8vZTMwMGI0MWRmMmZmYjZkNDU5Mjk3MjQwMGEyNWMwZDNAbzQ1MDY4NzYxNzg0NjQ3NjguaW5nZXN0LnVzLnNlbnRyeS5pby80NTA3MTU5MTc5MDM0NjI0XCIsXHJcblxyXG4gIC8vIEFkanVzdCB0aGlzIHZhbHVlIGluIHByb2R1Y3Rpb24sIG9yIHVzZSB0cmFjZXNTYW1wbGVyIGZvciBncmVhdGVyIGNvbnRyb2xcclxuICB0cmFjZXNTYW1wbGVSYXRlOiAxLFxyXG5cclxuICAvLyBTZXR0aW5nIHRoaXMgb3B0aW9uIHRvIHRydWUgd2lsbCBwcmludCB1c2VmdWwgaW5mb3JtYXRpb24gdG8gdGhlIGNvbnNvbGUgd2hpbGUgeW91J3JlIHNldHRpbmcgdXAgU2VudHJ5LlxyXG4gIGRlYnVnOiBmYWxzZSxcclxuXHJcbiAgcmVwbGF5c09uRXJyb3JTYW1wbGVSYXRlOiAxLjAsXHJcblxyXG4gIC8vIFRoaXMgc2V0cyB0aGUgc2FtcGxlIHJhdGUgdG8gYmUgMTAlLiBZb3UgbWF5IHdhbnQgdGhpcyB0byBiZSAxMDAlIHdoaWxlXHJcbiAgLy8gaW4gZGV2ZWxvcG1lbnQgYW5kIHNhbXBsZSBhdCBhIGxvd2VyIHJhdGUgaW4gcHJvZHVjdGlvblxyXG4gIHJlcGxheXNTZXNzaW9uU2FtcGxlUmF0ZTogMS4wLFxyXG5cclxuICAvLyBZb3UgY2FuIHJlbW92ZSB0aGlzIG9wdGlvbiBpZiB5b3UncmUgbm90IHBsYW5uaW5nIHRvIHVzZSB0aGUgU2VudHJ5IFNlc3Npb24gUmVwbGF5IGZlYXR1cmU6XHJcbiAgaW50ZWdyYXRpb25zOiBbXHJcbiAgICBTZW50cnkucmVwbGF5SW50ZWdyYXRpb24oe1xyXG4gICAgICAvLyBBZGRpdGlvbmFsIFJlcGxheSBjb25maWd1cmF0aW9uIGdvZXMgaW4gaGVyZSwgZm9yIGV4YW1wbGU6XHJcbiAgICAgIG1hc2tBbGxUZXh0OiB0cnVlLFxyXG4gICAgICBibG9ja0FsbE1lZGlhOiB0cnVlLFxyXG4gICAgfSksXHJcbiAgXSxcclxufSk7XHJcbiJdLCJuYW1lcyI6WyJnbG9iYWxUaGlzIiwidW5kZWZpbmVkIiwiU2VudHJ5IiwiaW5pdCIsImRzbiIsInRyYWNlc1NhbXBsZVJhdGUiLCJkZWJ1ZyIsInJlcGxheXNPbkVycm9yU2FtcGxlUmF0ZSIsInJlcGxheXNTZXNzaW9uU2FtcGxlUmF0ZSIsImludGVncmF0aW9ucyIsInJlcGxheUludGVncmF0aW9uIiwibWFza0FsbFRleHQiLCJibG9ja0FsbE1lZGlhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./sentry.client.config.ts\n"));

/***/ })

});